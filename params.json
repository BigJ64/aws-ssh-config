{"name":"aws-ssh-config","tagline":"Generate SSH config files from AWS EC2 inventory","body":"aws-ssh-config\r\n======\r\n\r\nDescription\r\n---\r\n\r\nA very simple script that queries the AWS EC2 API with boto and generates a SSH config file ready to use. \r\nThere are a few similar scripts around but I couldn't find one that would satisfy all my wish list:\r\n\r\n- Connect to all regions at once\r\n- Do AMI -> user lookup (regexp-based)\r\n- Support public/private IP addresses (for VPNs and VPCs)\r\n- Support multiple instances with same tags (e.g. autoscaling groups) and provide an incremental count for duplicates based on instance launch time\r\n- Support multiple customizable tags concatenations in a user-provided order\r\n- Support region (with AZ) in the host name concatenation\r\n- Properly leverage tab completion\r\n\r\nUsage\r\n---\r\n\r\nThis assumes boto is installed and configured. Also, private ssh keys must be copied under `~/.ssh/`\r\n\r\nSupported arguments:\r\n\r\n```\r\ngianluca@sid:~$ python aws-ssh-config.py --help\r\nusage: aws-ssh-config.py [-h] [--tags TAGS] [--private]\r\n\r\noptional arguments:\r\n  -h, --help   show this help message and exit\r\n  --tags TAGS  A comma-separated list of tag names to be considered for\r\n               concatenation. If omitted, all tags will be used\r\n  --region     Append the region name at the end of the concatenation\r\n  --private    Use private IP addresses (public are used by default)\r\n```\r\n\r\nBy default, it will name hosts by concatenating all tags:\r\n\r\n```\r\ngianluca@sid:~$ python aws-ssh-config.py > ~/.ssh/config\r\ngianluca@sid:~$ cat ~/.ssh/config\r\nHost dev-worker-1\r\n    HostName 54.173.109.173\r\n    User ec2-user\r\n    IdentityFile ~/.ssh/dev.pem\r\n    StrictHostKeyChecking no\r\n\r\nHost dev-worker-2\r\n    HostName 54.173.190.141\r\n    User ec2-user\r\n    IdentityFile ~/.ssh/dev.pem\r\n    StrictHostKeyChecking no\r\n\r\nHost prod-worker-1\r\n    HostName 54.164.168.30\r\n    User ec2-user\r\n    IdentityFile ~/.ssh/prod.pem\r\n    StrictHostKeyChecking no\r\n\r\nHost prod-worker-2\r\n    HostName 54.174.115.242\r\n    User ubuntu\r\n    IdentityFile ~/.ssh/prod.pem\r\n    StrictHostKeyChecking no\r\n```\r\n\r\nssh completion will immediately work:\r\n\r\n```\r\ngianluca@sid:~$ ssh d[TAB]\r\ndev-worker-1\r\ndev-worker-2\r\n```\r\n\r\nIt's possible to customize which tags one is interested in, as well as the order used for concatenation:\r\n\r\n```\r\ngianluca@sid:~$ python aws-ssh-config.py --tags Name > ~/.ssh/config\r\ngianluca@sid:~$ cat ~/.ssh/config\r\nHost worker-1\r\n    HostName 54.173.109.173\r\n    User ec2-user\r\n    IdentityFile ~/.ssh/dev.pem\r\n    StrictHostKeyChecking no\r\n\r\nHost worker-2\r\n    HostName 54.173.190.141\r\n    User ec2-user\r\n    IdentityFile ~/.ssh/dev.pem\r\n    StrictHostKeyChecking no\r\n\r\nHost worker-3\r\n    HostName 54.164.168.30\r\n    User ec2-user\r\n    IdentityFile ~/.ssh/prod.pem\r\n    StrictHostKeyChecking no\r\n\r\nHost worker-4\r\n    HostName 54.174.115.242\r\n    User ubuntu\r\n    IdentityFile ~/.ssh/prod.pem\r\n    StrictHostKeyChecking no\r\n\r\ngianluca@sid:~$ python aws-ssh-config.py --tags Name,Infrastructure > ~/.ssh/config\r\ngianluca@sid:~$ cat ~/.ssh/config\r\nHost worker-dev-1\r\n    HostName 54.173.109.173\r\n    User ec2-user\r\n    IdentityFile ~/.ssh/dev.pem\r\n    StrictHostKeyChecking no\r\n\r\nHost worker-dev-2\r\n    HostName 54.173.190.141\r\n    User ec2-user\r\n    IdentityFile ~/.ssh/dev.pem\r\n    StrictHostKeyChecking no\r\n\r\nHost worker-prod-1\r\n    HostName 54.164.168.30\r\n    User ec2-user\r\n    IdentityFile ~/.ssh/prod.pem\r\n    StrictHostKeyChecking no\r\n\r\nHost worker-prod-2\r\n    HostName 54.174.115.242\r\n    User ubuntu\r\n    IdentityFile ~/.ssh/prod.pem\r\n    StrictHostKeyChecking no\r\n\r\n```\r\n\r\nBy default, the ssh user is calculated from a regular expression based on the AMI name. If no matches are found, a warning is printed on standard error and one can edit the script and add the rule to the `AMIS_TO_USER` dictionary:\r\n\r\n```\r\ngianluca@sid:~$ python aws-ssh-config.py > ~/.ssh/config\r\nCan't lookup user for AMI 'ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140926', add a rule to the script\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}